{"ast":null,"code":"import React from\"react\";import ProgressBar from\"./ProgressBar\";import{secondsToDuration}from\"../utils/duration\";function Countdown(_ref){var session=_ref.session,isTimerRunning=_ref.isTimerRunning;if(!session.active)return null;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row mb-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"h2\",{\"data-testid\":\"session-title\"},session.sessionTypeVerb,\" for \",secondsToDuration(session.currentDuration),\" minutes\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\",\"data-testid\":\"session-sub-title\"},secondsToDuration(session.timer),\" remaining\"),/*#__PURE__*/React.createElement(\"h3\",null,!isTimerRunning&&\"PAUSED\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"row mb-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(ProgressBar,{session:session}))));}export default Countdown;","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Countdown.js"],"names":["React","ProgressBar","secondsToDuration","Countdown","session","isTimerRunning","active","sessionTypeVerb","currentDuration","timer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,iBAAT,KAAkC,mBAAlC,CAEA,QAASC,CAAAA,SAAT,MAAiD,IAA3BC,CAAAA,OAA2B,MAA3BA,OAA2B,CAAlBC,cAAkB,MAAlBA,cAAkB,CAE/C,GAAI,CAACD,OAAO,CAACE,MAAb,CAAqB,MAAO,KAAP,CAGrB,mBACE,4CAEE,2BAAK,SAAS,CAAC,UAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eAEE,0BAAI,cAAY,eAAhB,EAAiCF,OAAO,CAACG,eAAzC,SAA+DL,iBAAiB,CAACE,OAAO,CAACI,eAAT,CAAhF,YAFF,cAIE,yBAAG,SAAS,CAAC,MAAb,CAAoB,cAAY,mBAAhC,EACGN,iBAAiB,CAACE,OAAO,CAACK,KAAT,CADpB,cAJF,cAOE,8BAAK,CAACJ,cAAD,UAAL,CAPF,CADF,CAFF,cAaE,2BAAK,SAAS,CAAC,UAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,WAAD,EAAa,OAAO,CAAGD,OAAvB,EADF,CADF,CAbF,CADF,CAqBD,CAED,cAAeD,CAAAA,SAAf","sourcesContent":["import React from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport { secondsToDuration } from \"../utils/duration\";\r\n\r\nfunction Countdown ({ session, isTimerRunning }) {\r\n\r\n  if (!session.active) return null;\r\n\r\n\r\n  return (  \r\n    <div>\r\n      {/* This area should show only when a focus or break session is running or pauses */}\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          {/* Update message below to include current session (Focusing or On Break) and total duration */}\r\n          <h2 data-testid=\"session-title\">{session.sessionTypeVerb} for {secondsToDuration(session.currentDuration)} minutes</h2>          \r\n          {/* Update message below to include time remaining in the current session */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {secondsToDuration(session.timer)} remaining\r\n          </p>\r\n          <h3>{!isTimerRunning && `PAUSED`}</h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          <ProgressBar session={ session } />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}