{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport FocusDuration from \"./FocusDuration\";\nimport BreakDuration from \"./BreakDuration\";\nimport Countdown from \"./Countdown\"; // import the formatting utilities for duration\n\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const sessionInitialState = {\n    active: false,\n    focusSession: true,\n    focusDuration: 1500,\n    breakDuration: 300,\n    timer: 1500\n  }; // set up state variable for whether there is an active session\n\n  const [session, setSession] = useState({ ...sessionInitialState\n  });\n  console.log(session);\n  useInterval(() => {\n    setSession({ ...session,\n      [timer]: session[timer] - 1\n    });\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n\n    if (!session.active) {\n      setSession({ ...session,\n        [active]: true,\n        [timer]: session.focusDuration\n      });\n    }\n  }\n\n  const stopButtonHandler = () => {\n    setIsTimerRunning(false);\n    setSession({ ...session,\n      [active]: false,\n      [focusSession]: true\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FocusDuration, {\n    min: 300,\n    max: 3600,\n    label: \"Focus Duration: \",\n    session: session,\n    setSession: setSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BreakDuration, {\n    min: 60,\n    max: 900,\n    label: \"Break Duration: \",\n    session: session,\n    setSession: setSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: classNames({\n      \"btn\": true,\n      \"btn-primary\": session.active,\n      \"btn-secondary\": !session.active,\n      \"disabled\": !session.active\n    }),\n    title: \"Stop the session\",\n    onClick: stopButtonHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Countdown, {\n    session: session,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","FocusDuration","BreakDuration","Countdown","minutesToDuration","secondsToDuration","Pomodoro","isTimerRunning","setIsTimerRunning","sessionInitialState","active","focusSession","focusDuration","breakDuration","timer","session","setSession","console","log","playPause","prevState","stopButtonHandler","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport FocusDuration from \"./FocusDuration\";\nimport BreakDuration from \"./BreakDuration\";\nimport Countdown from \"./Countdown\";\n// import the formatting utilities for duration\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\"\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  const sessionInitialState = {\n    active: false,\n    focusSession: true,\n    focusDuration: 1500,\n    breakDuration: 300,\n    timer: 1500,\n  }\n\n  // set up state variable for whether there is an active session\n  const [session, setSession] = useState({...sessionInitialState});\n\nconsole.log(session)\n\n  useInterval(\n    () => {\n      setSession({\n        ...session,\n        [timer]: session[timer] - 1,\n      })\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n\n    if (!session.active) {\n      setSession({\n        ...session,\n        [active]: true,\n        [timer]: session.focusDuration,\n      });\n    }\n  }\n\n  const stopButtonHandler = () => {\n    setIsTimerRunning(false);\n    setSession({\n      ...session,\n      [active]: false,\n      [focusSession]: true,\n    });\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <FocusDuration\n            min={ 300 }\n            max={ 3600 }\n            label={ \"Focus Duration: \" }\n            session={ session }\n            setSession={ setSession }\n          />\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <BreakDuration\n              min={ 60 }\n              max={ 900 }\n              label={ \"Break Duration: \" }\n              session={ session }\n              setSession={ setSession }\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className={classNames({\n                \"btn\": true,\n                \"btn-primary\": session.active,\n                \"btn-secondary\": !session.active,\n                \"disabled\": !session.active,\n              })}\n              title=\"Stop the session\"\n              onClick={stopButtonHandler}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <Countdown\n        session={ session }\n        isTimerRunning={ isTimerRunning }\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}