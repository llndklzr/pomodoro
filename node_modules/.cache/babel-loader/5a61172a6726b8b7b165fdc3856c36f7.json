{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Duration.js\";\nimport React, { useState } from \"react\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport classNames from \"../utils/class-names\";\n\nfunction Duration({\n  min,\n  max,\n  label,\n  periodDuration,\n  setPeriodDuration,\n  activeSession\n}) {\n  const decreaseButtonHandler = () => {\n    if (periodDuration > min) setPeriodDuration(periodDuration - 60);\n    console.log(periodDuration);\n  };\n\n  const increaseButtonHandler = () => {\n    if (periodDuration < max) setPeriodDuration(periodDuration + 60);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, `${label} ${secondsToDuration(periodDuration)}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: classNames({\n      \"btn\": true,\n      \"btn-primary\": !activeSession,\n      \"btn-secondary\": activeSession,\n      \"disabled\": !activeSession\n    }),\n    onClick: decreaseButtonHandler,\n    \"data-testid\": \"decrease-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: classNames({\n      \"btn\": true,\n      \"btn-primary\": !activeSession,\n      \"btn-secondary\": activeSession,\n      \"disabled\": !activeSession\n    }),\n    onClick: increaseButtonHandler,\n    \"data-testid\": \"increase-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Duration;","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Duration.js"],"names":["React","useState","secondsToDuration","classNames","Duration","min","max","label","periodDuration","setPeriodDuration","activeSession","decreaseButtonHandler","console","log","increaseButtonHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,SAASC,QAAT,CAAmB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,cAAnB;AAAmCC,EAAAA,iBAAnC;AAAsDC,EAAAA;AAAtD,CAAnB,EAA0F;AACxF,QAAMC,qBAAqB,GAAG,MAAM;AAClC,QAAIH,cAAc,GAAGH,GAArB,EAA2BI,iBAAiB,CAACD,cAAc,GAAG,EAAlB,CAAlB;AAC1BI,IAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;AACD,GAHD;;AAKA,QAAMM,qBAAqB,GAAG,MAAM;AAClC,QAAIN,cAAc,GAAGF,GAArB,EAA2BG,iBAAiB,CAACD,cAAc,GAAG,EAAlB,CAAlB;AAC3B,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,GAAED,KAAM,IAAGL,iBAAiB,CAACM,cAAD,CAAiB,EAFjD,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEL,UAAU,CAAC;AACpB,aAAO,IADa;AAEpB,qBAAe,CAACO,aAFI;AAGpB,uBAAiBA,aAHG;AAIpB,kBAAY,CAACA;AAJO,KAAD,CAFvB;AAQE,IAAA,OAAO,EAAEC,qBARX;AASE,mBAAY,gBATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAFF,eAgBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAER,UAAU,CAAC;AACpB,aAAO,IADa;AAEpB,qBAAe,CAACO,aAFI;AAGpB,uBAAiBA,aAHG;AAIpB,kBAAY,CAACA;AAJO,KAAD,CAFvB;AAQE,IAAA,OAAO,EAAEI,qBARX;AASE,mBAAY,gBATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAhBF,CALF,CADF;AAsCD;;AAED,eAAeV,QAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport { secondsToDuration } from \"../utils/duration\";\r\nimport classNames from \"../utils/class-names\";\r\n\r\nfunction Duration ({ min, max, label, periodDuration, setPeriodDuration, activeSession }) {\r\n  const decreaseButtonHandler = () => {\r\n    if (periodDuration > min) (setPeriodDuration(periodDuration - 60));\r\n    console.log(periodDuration)\r\n  }\r\n  \r\n  const increaseButtonHandler = () => {\r\n    if (periodDuration < max) (setPeriodDuration(periodDuration + 60));\r\n  };\r\n  \r\n  return (\r\n    <div className=\"input-group input-group-lg mb-2\">\r\n      <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n        {/* TODO: Update this text to display the current focus session duration */}\r\n        {`${label} ${secondsToDuration(periodDuration)}`}\r\n      </span>\r\n      <div className=\"input-group-append\">\r\n        {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\r\n        <button\r\n          type=\"button\"\r\n          className={classNames({\r\n            \"btn\": true,\r\n            \"btn-primary\": !activeSession,\r\n            \"btn-secondary\": activeSession,\r\n            \"disabled\": !activeSession,\r\n          })}\r\n          onClick={decreaseButtonHandler}\r\n          data-testid=\"decrease-focus\"\r\n        >\r\n          <span className=\"oi oi-minus\" />\r\n        </button>\r\n        {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\r\n        <button\r\n          type=\"button\"\r\n          className={classNames({\r\n            \"btn\": true,\r\n            \"btn-primary\": !activeSession,\r\n            \"btn-secondary\": activeSession,\r\n            \"disabled\": !activeSession,\r\n          })}\r\n          onClick={increaseButtonHandler}\r\n          data-testid=\"increase-focus\"\r\n        >\r\n          <span className=\"oi oi-plus\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Duration;"]},"metadata":{},"sourceType":"module"}