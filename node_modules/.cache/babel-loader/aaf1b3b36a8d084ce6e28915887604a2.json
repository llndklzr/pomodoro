{"ast":null,"code":"import _objectSpread from\"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";// utilities\nimport classNames from\"../utils/class-names\";import useInterval from\"../utils/useInterval\";import changeSessionType from\"../utils/change-session-type\";// components\nimport FocusDuration from\"./FocusDuration\";import BreakDuration from\"./BreakDuration\";import Countdown from\"./Countdown\";function Pomodoro(){// Timer starts out paused\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isTimerRunning=_useState2[0],setIsTimerRunning=_useState2[1];var sessionInitialState={active:false,// is there an active session\nfocusSession:true,// focus session if true, break session if false\nsessionTypeVerb:\"Focusing\",// for rendering whether session is \"Focusing\" or \"On Break\"\nfocusDuration:1500,// duration currently set for focus period in s, default 1500\nbreakDuration:300,// duration currently set for break period in s, default 300\ncurrentDuration:0,// the duration of current session\ntimer:1500// a timer to count down\n};var _useState3=useState(_objectSpread({},sessionInitialState)),_useState4=_slicedToArray(_useState3,2),session=_useState4[0],setSession=_useState4[1];useInterval(function(){setSession(_objectSpread(_objectSpread({},session),{},{timer:session.timer-1}));if(session.timer<1)changeSessionType(session,setSession);},isTimerRunning?1000:null);function playPause(){setIsTimerRunning(function(prevState){return!prevState;});if(!session.active){setSession(_objectSpread(_objectSpread({},session),{},{active:true,currentDuration:session.focusDuration,timer:session.focusDuration}));}}var stopButtonHandler=function stopButtonHandler(){setIsTimerRunning(false);setSession(_objectSpread(_objectSpread({},session),{},{active:false,focusSession:true}));};return/*#__PURE__*/React.createElement(\"div\",{className:\"pomodoro\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(FocusDuration,{min:300,max:3600,label:\"Focus Duration: \",session:session,setSession:setSession})),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"float-right\"},/*#__PURE__*/React.createElement(BreakDuration,{min:60,max:900,label:\"Break Duration: \",session:session,setSession:setSession})))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group btn-group-lg mb-2\",role:\"group\",\"aria-label\":\"Timer controls\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\",\"data-testid\":\"play-pause\",title:\"Start or pause timer\",onClick:playPause},/*#__PURE__*/React.createElement(\"span\",{className:classNames({oi:true,\"oi-media-play\":!isTimerRunning,\"oi-media-pause\":isTimerRunning})})),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:classNames({\"btn\":true,\"btn-primary\":session.active,\"btn-secondary\":!session.active}),title:\"Stop the session\",onClick:session.active?stopButtonHandler:undefined},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-media-stop\"}))))),/*#__PURE__*/React.createElement(Countdown,{session:session,isTimerRunning:isTimerRunning}));}export default Pomodoro;","map":{"version":3,"sources":["D:/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","changeSessionType","FocusDuration","BreakDuration","Countdown","Pomodoro","isTimerRunning","setIsTimerRunning","sessionInitialState","active","focusSession","sessionTypeVerb","focusDuration","breakDuration","currentDuration","timer","session","setSession","playPause","prevState","stopButtonHandler","oi","undefined"],"mappings":"mYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA;AACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8BAA9B,CAEA;AACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAGA,QAASC,CAAAA,QAAT,EAAoB,CAClB;AADkB,cAE0BP,QAAQ,CAAC,KAAD,CAFlC,wCAEXQ,cAFW,eAEKC,iBAFL,eAIlB,GAAMC,CAAAA,mBAAmB,CAAG,CAC1BC,MAAM,CAAE,KADkB,CACE;AAC5BC,YAAY,CAAE,IAFY,CAEE;AAC5BC,eAAe,CAAE,UAHS,CAGE;AAC5BC,aAAa,CAAE,IAJW,CAIE;AAC5BC,aAAa,CAAE,GALW,CAKE;AAC5BC,eAAe,CAAE,CANS,CAME;AAC5BC,KAAK,CAAE,IAAqB;AAPF,CAA5B,CAJkB,eAcYjB,QAAQ,kBAAKU,mBAAL,EAdpB,yCAcXQ,OAdW,eAcFC,UAdE,eAgBlBjB,WAAW,CACT,UAAM,CACJiB,UAAU,gCAAKD,OAAL,MAAcD,KAAK,CAAEC,OAAO,CAACD,KAAR,CAAgB,CAArC,GAAV,CACA,GAAIC,OAAO,CAACD,KAAR,CAAgB,CAApB,CAAwBd,iBAAiB,CAACe,OAAD,CAAUC,UAAV,CAAlB,CAExB,CALQ,CAMTX,cAAc,CAAG,IAAH,CAAU,IANf,CAAX,CASA,QAASY,CAAAA,SAAT,EAAqB,CACnBX,iBAAiB,CAAC,SAACY,SAAD,QAAe,CAACA,SAAhB,EAAD,CAAjB,CAEA,GAAI,CAACH,OAAO,CAACP,MAAb,CAAqB,CACnBQ,UAAU,gCACLD,OADK,MAERP,MAAM,CAAE,IAFA,CAGRK,eAAe,CAAEE,OAAO,CAACJ,aAHjB,CAIRG,KAAK,CAAEC,OAAO,CAACJ,aAJP,GAAV,CAMD,CACF,CAED,GAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9Bb,iBAAiB,CAAC,KAAD,CAAjB,CACAU,UAAU,gCACLD,OADK,MAERP,MAAM,CAAE,KAFA,CAGRC,YAAY,CAAE,IAHN,GAAV,CAKD,CAPD,CASA,mBACE,2BAAK,SAAS,CAAC,UAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,aAAD,EACE,GAAG,CAAG,GADR,CAEE,GAAG,CAAG,IAFR,CAGE,KAAK,CAAG,kBAHV,CAIE,OAAO,CAAGM,OAJZ,CAKE,UAAU,CAAGC,UALf,EADF,CADF,cAUE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,aAAf,eACE,oBAAC,aAAD,EACE,GAAG,CAAG,EADR,CAEE,GAAG,CAAG,GAFR,CAGE,KAAK,CAAG,kBAHV,CAIE,OAAO,CAAGD,OAJZ,CAKE,UAAU,CAAGC,UALf,EADF,CADF,CAVF,CADF,cAuBE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BACE,SAAS,CAAC,6BADZ,CAEE,IAAI,CAAC,OAFP,CAGE,aAAW,gBAHb,eAKE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,iBAFZ,CAGE,cAAY,YAHd,CAIE,KAAK,CAAC,sBAJR,CAKE,OAAO,CAAEC,SALX,eAOE,4BACE,SAAS,CAAEnB,UAAU,CAAC,CACpBsB,EAAE,CAAE,IADgB,CAEpB,gBAAiB,CAACf,cAFE,CAGpB,iBAAkBA,cAHE,CAAD,CADvB,EAPF,CALF,cAqBE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAEP,UAAU,CAAC,CACpB,MAAO,IADa,CAEpB,cAAeiB,OAAO,CAACP,MAFH,CAGpB,gBAAiB,CAACO,OAAO,CAACP,MAHN,CAAD,CAFvB,CAOE,KAAK,CAAC,kBAPR,CAQE,OAAO,CAAGO,OAAO,CAACP,MAAR,CAAiBW,iBAAjB,CAAqCE,SARjD,eAUE,4BAAM,SAAS,CAAC,kBAAhB,EAVF,CArBF,CADF,CADF,CAvBF,cA6DE,oBAAC,SAAD,EACE,OAAO,CAAGN,OADZ,CAEE,cAAc,CAAGV,cAFnB,EA7DF,CADF,CAoED,CAED,cAAeD,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\n// utilities\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport changeSessionType from \"../utils/change-session-type\";\n\n// components\nimport FocusDuration from \"./FocusDuration\";\nimport BreakDuration from \"./BreakDuration\";\nimport Countdown from \"./Countdown\";\n\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  const sessionInitialState = {\n    active: false,              // is there an active session\n    focusSession: true,         // focus session if true, break session if false\n    sessionTypeVerb: \"Focusing\",// for rendering whether session is \"Focusing\" or \"On Break\"\n    focusDuration: 1500,        // duration currently set for focus period in s, default 1500\n    breakDuration: 300,         // duration currently set for break period in s, default 300\n    currentDuration: 0,         // the duration of current session\n    timer: 1500,                // a timer to count down\n  }\n\n  const [session, setSession] = useState({...sessionInitialState});\n\n  useInterval(\n    () => {\n      setSession({...session, timer: session.timer - 1,});\n      if (session.timer < 1) (changeSessionType(session, setSession));\n\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n\n    if (!session.active) {\n      setSession({\n        ...session,\n        active: true,\n        currentDuration: session.focusDuration,\n        timer: session.focusDuration,\n      });\n    }\n  }\n\n  const stopButtonHandler = () => {\n    setIsTimerRunning(false);\n    setSession({\n      ...session,\n      active: false,\n      focusSession: true,\n    });\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <FocusDuration\n            min={ 300 }\n            max={ 3600 }\n            label={ \"Focus Duration: \" }\n            session={ session }\n            setSession={ setSession }\n          />\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <BreakDuration\n              min={ 60 }\n              max={ 900 }\n              label={ \"Break Duration: \" }\n              session={ session }\n              setSession={ setSession }\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className={classNames({\n                \"btn\": true,\n                \"btn-primary\": session.active,\n                \"btn-secondary\": !session.active,\n              })}\n              title=\"Stop the session\"\n              onClick={ session.active ? stopButtonHandler : undefined }\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <Countdown\n        session={ session }\n        isTimerRunning={ isTimerRunning }\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}